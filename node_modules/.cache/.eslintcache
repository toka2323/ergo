[{"/home/toka/Desktop/ergo/src/index.js":"1","/home/toka/Desktop/ergo/src/App.js":"2","/home/toka/Desktop/ergo/src/utils/Routers.js":"3","/home/toka/Desktop/ergo/src/views/Dashboard/Dashboard.js":"4","/home/toka/Desktop/ergo/src/views/Login/Login.js":"5","/home/toka/Desktop/ergo/src/components/Layout/Layouts.js":"6","/home/toka/Desktop/ergo/src/components/Menu/LeftMenu.js":"7","/home/toka/Desktop/ergo/src/views/Calendar/CalendarEvent.js":"8","/home/toka/Desktop/ergo/src/views/NotFound/NotFound.js":"9","/home/toka/Desktop/ergo/src/views/Patient/Patient.js":"10"},{"size":196,"mtime":1630049795000,"results":"11","hashOfConfig":"12"},{"size":374,"mtime":1630049851000,"results":"13","hashOfConfig":"12"},{"size":902,"mtime":1630141157920,"results":"14","hashOfConfig":"12"},{"size":711,"mtime":1630137602029,"results":"15","hashOfConfig":"12"},{"size":1930,"mtime":1630133119943,"results":"16","hashOfConfig":"12"},{"size":1397,"mtime":1630142904522,"results":"17","hashOfConfig":"12"},{"size":685,"mtime":1630224957809,"results":"18","hashOfConfig":"12"},{"size":629,"mtime":1630136180335,"results":"19","hashOfConfig":"12"},{"size":382,"mtime":1630225281357,"results":"20","hashOfConfig":"12"},{"size":3514,"mtime":1630225173892,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"nrfhh4",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/home/toka/Desktop/ergo/src/index.js",[],["46","47"],"/home/toka/Desktop/ergo/src/App.js",[],"/home/toka/Desktop/ergo/src/utils/Routers.js",[],"/home/toka/Desktop/ergo/src/views/Dashboard/Dashboard.js",[],"/home/toka/Desktop/ergo/src/views/Login/Login.js",["48"],"import { Form, Col, Row, Card, Typography, Input, Checkbox, Button } from 'antd';\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\n\n\nconst { Title } = Typography;\n\nconst Login = () => {\n\n    return (\n        \n        <Row>\n            <Card className='login-card'>\n                <Title level={2} className='logo'> ERGO </Title>\n                <Form className='login-form'>\n                    <Title level={2} className='title'>\n                        login <br/> \n                        <span className=\"span\">\n                        Lorem ipsum dolor sit amet</span>\n                    </Title>\n                    \n                    <Form.Item\n                        name=\"username\"\n                        rules={[{ required: true, message: 'Please input your username!' }]}\n                    >\n                        <p>Benutzername*</p>\n                        <Input size=\"large\"  />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please input your password!' }]}\n                    >\n                        <p>Password*</p>\n                        <Input.Password size=\"large\"  />\n                        {/* <Link to='/'> Password vergessen? </Link> */}\n                    </Form.Item>\n\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{span: 16 }}>\n                        <Checkbox>Zugangsdaten speichern</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" size=\"large\" htmlType=\"submit\">Login</Button>\n                    </Form.Item>\n\n                </Form>\n            </Card>\n            <Col span={12} className='bg-blue'></Col>\n            <Col span={12} className='bg-light'></Col>\n        </Row>\n\n    )\n\n}\n\nexport default Login;","/home/toka/Desktop/ergo/src/components/Layout/Layouts.js",[],"/home/toka/Desktop/ergo/src/components/Menu/LeftMenu.js",[],"/home/toka/Desktop/ergo/src/views/Calendar/CalendarEvent.js",["49","50"],"import { Col, Row, Calendar, Alert, Typography } from 'antd';\nimport React from 'react';\nimport Layouts from '../../components/Layout/Layouts';\nimport moment from 'moment';\nimport './Calendar.css';\n\nconst { Title } = Typography;\n\nconst CalendarEvent = () => {\n\n    return (\n        <Layouts>\n            \n            <Row>\n                <Col span={24}>\n                    <Title level={2}> Calendar </Title>\n                </Col>\n                <Col span={14} className='calendar-container'>\n\n                <Calendar />\n\n                </Col>\n            </Row>\n\n        </Layouts>\n    )\n\n}\n\nexport default CalendarEvent;","/home/toka/Desktop/ergo/src/views/NotFound/NotFound.js",[],"/home/toka/Desktop/ergo/src/views/Patient/Patient.js",["51","52","53","54"],"import { PageHeader, Button, Table, Space, Modal, Input, Form  } from 'antd';\n\nimport React, {useState} from 'react';\nimport Layouts  from '../../components/Layout/Layouts';\n\nimport {\n    SearchOutlined, \n    UserAddOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    UserOutlined\n} from '@ant-design/icons';\n\nconst { Search } = Input;\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n    },\n    {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n        <Space size=\"middle\">\n            <a><UserOutlined /> </a>\n            <a><EditOutlined /> </a>\n            <a><DeleteOutlined /> </a>\n        </Space>\n        ),\n    },\n];\n\nconst data = [\n    {\n      key: '1',\n      name: 'John Brown',\n      age: 32,\n      address: 'New York No. 1 Lake Park',\n      tags: ['nice', 'developer'],\n    },\n    {\n      key: '2',\n      name: 'Jim Green',\n      age: 42,\n      address: 'London No. 1 Lake Park',\n      tags: ['loser'],\n    },\n    {\n      key: '3',\n      name: 'Joe Black',\n      age: 32,\n      address: 'Sidney No. 1 Lake Park',\n      tags: ['cool', 'teacher'],\n    },\n];\n\n\nconst Patient = () => {\n    \n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [confirmLoading, setConfirmLoading] = useState(false);\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = () => {\n        setConfirmLoading(true);\n        setTimeout(() => {\n            setConfirmLoading(false);\n          }, 2000);\n\n    };\n    \n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    return (\n        <Layouts>\n         \n            <PageHeader\n                title='Patient'\n                extra={[\n                    <Search placeholder=\"search\" size=\"large\" style={{ width: 200 }} />,\n                    <Button \n                    size=\"large\" \n                    onClick={showModal} \n                    icon={<UserAddOutlined />}\n                    >Add Patient</Button>]\n                }\n            > \n            </PageHeader>\n\n            <Modal title=\"Add Patient\" \n            visible={isModalVisible} \n            confirmLoading={confirmLoading}\n            onOk={handleOk} \n            onCancel={handleCancel}>\n                <Form\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 14 }}\n                onOk={handleOk}\n                >\n                    <Form.Item\n                        label=\"Name\"\n                        name=\"Name\"\n                        rules={[{ required: true, message: 'Please input your Name!' }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"LastName\"\n                        name=\"LastName\"\n                        rules={[{ required: true, message: 'Please input your Lastname!' }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Address\"\n                        name=\"Address\"\n                        rules={[{ required: true, message: 'Please input your Address!' }]}>\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n            <Table className='table' columns={columns} dataSource={data} />\n              \n\n        </Layouts>\n    )\n\n}\n\nexport default Patient;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":1,"column":30,"nodeType":"61","messageId":"62","endLine":1,"endColumn":35},{"ruleId":"59","severity":1,"message":"64","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"59","severity":1,"message":"65","line":7,"column":5,"nodeType":"61","messageId":"62","endLine":7,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":32,"column":13,"nodeType":"68","endLine":32,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":33,"column":13,"nodeType":"68","endLine":33,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":34,"column":13,"nodeType":"68","endLine":34,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'moment' is defined but never used.","'SearchOutlined' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]